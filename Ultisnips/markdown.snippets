priority 0

global !p
# A overkill(dirty) table with automatic alignment feature
def create_table(snip):
	# retrieving single line from current string and treat it like tabstops count
	placeholders_string = snip.buffer[snip.line].strip()
	rows_amount = int(placeholders_string[0])
	columns_amount = int(placeholders_string[1])
	prefix_str = "from vimsnippets import display_width;"
	# erase current line
	snip.buffer[snip.line] = ""
	# create anonymous snippet with expected content and number of tabstops
	anon_snippet_title = "| "
	anon_snippet_delimiter = "|"
	for col in range(1, columns_amount+1):
		sync_rows = [x*columns_amount+col for x in range(rows_amount+1)]
		sync_str = ",".join(["t[{0}]".format(x) for x in sync_rows])
		max_width_str = "max(list(map(display_width, [" + sync_str + "])))"
		cur_width_str = "display_width(t[" + str(col) + "])"
		rv_val = "(" + max_width_str + "-" + cur_width_str + ")*' '"
		anon_snippet_title += "${" + str(col)  + ":head" + str(col)\
			+ "}`!p " + prefix_str + "snip.rv=" + rv_val + "` | "
		anon_snippet_delimiter += ":`!p " + prefix_str + "snip.rv = "\
			+ max_width_str + "*'-'" + "`-|"
	anon_snippet_title += "\n"
	anon_snippet_delimiter += "\n"
	anon_snippet_body = ""
	for row in range(1, rows_amount+1):
		body_row = "| "
		for col in range(1, columns_amount+1):
			sync_rows = [x*columns_amount+col for x in range(rows_amount+1)]
			sync_str = ",".join(["t[{0}]".format(x) for x in sync_rows])
			max_width_str = "max(list(map(display_width, [" + sync_str + "])))"
			cur_width_str = "display_width(t[" + str(row*columns_amount+col) + "])"
			rv_val = "(" + max_width_str + "-" + cur_width_str + ")*' '"
			placeholder = "R{0}C{1}".format(row, col)
			body_row += "${" + str(row*columns_amount+col)  + ":" + placeholder\
				+ "}`!p " + prefix_str + "snip.rv=" + rv_val + "` | "
		body_row += "\n"
		anon_snippet_body += body_row
	anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body
	# expand anonymous snippet
	snip.expand_anon(anon_snippet_table)
endglobal

###########################
# Sections and Paragraphs #
###########################
snippet h1 "Section" b
# ${1:Section Name} 
$0
endsnippet

snippet h2 "Sub Section" b
## ${1:Section Name}
$0
endsnippet

snippet h3 "SubSub Section" b
### ${1:Section Name} 
$0
endsnippet

snippet h4 "Paragraph" b
#### ${1:Paragraph Name} 
$0
endsnippet

snippet h5 "Paragraph" b
##### ${1:Paragraph Name} 
$0
endsnippet

snippet h6 "Paragraph" b
###### ${1:Paragraph Name} 
$0
endsnippet


snippet sms "small and strong" 
<small><strong> ${1:Paragraph Name} </strong></small> $0
endsnippet

snippet sm "small" 
<small> ${1:Paragraph Name} </small> $0
endsnippet

###################
# Text formatting #
###################

snippet * "italics"
*${1:${VISUAL}}* $0
endsnippet

snippet ** "bold"
**${1:${VISUAL}}** $0
endsnippet

snippet == "mark"
<mark>${1:${VISUAL}}</mark> $0
endsnippet

snippet *** "bold italics"
***${1:${VISUAL}}*** $0
endsnippet

snippet /* "Comment"
<!-- ${1:${VISUAL}} -->$0
endsnippet

################
# Common stuff #
################
snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:https://${2:www.url.com}})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

snippet ilc "Inline Code" i
\`$1\`$0
endsnippet

snippet cbl "Codeblock" b
\`\`\`
$1
\`\`\`
$0
endsnippet

snippet mf "Math Function" b
\$\$
$1
\$\$
$0
endsnippet

snippet imf "Inline Math Function" b
\$\$ $1\$\$ $0
endsnippet

snippet refl "Reference Link"
[${1:${VISUAL:Text}}][${2:id}]$0

[$2]:${4:https://${3:www.url.com}} "${5:$4}"
endsnippet

snippet fnt "Footnote"
[^${1:${VISUAL:Footnote}}]$0

[^$1]:${2:Text}
endsnippet

snippet detail "Disclosure"
<details${3: open=""}>
  ${1:<summary>${2}</summary>}$0
</details>
endsnippet

post_jump "create_table(snip)"
snippet "tb([1-9][1-9])" "Fancy table" br
`!p snip.rv = match.group(1)`
endsnippet

# vim:ft=snippets:




snippet \G "Gamma" i
\Gamma
endsnippet

snippet \D "Delta" i
\Delta
endsnippet

snippet \L "Lambda" i
\Lambda
endsnipet

snippet \F "Phi" i
\Phi
endsnippet

snippet \P "Pi" i
\Pi
endsnippet

snippet \C "Psi" i
\Psi
endsnippet

snippet \S "Sigma" i
\Sigma
endsnippet

snippet \U "Theta" i
\Theta
endsnippet

snippet \Y "Upsilon" i
\Upsilon
endsnippet

snippet \J "Xi" i
\Xi
endsnippet

snippet \V "Omega" i
\Omega
endsnippet

snippet \a "alpha" i
\alpha
endsnippet

snippet \b "beta" i
\beta
endsnippet

snippet \g "gamma" i
\gamma
endsnippet

snippet \d "delta" i
\delta
endsnippet

snippet \e "epsilon" i
\epsilon
endsnippet

snippet \z "zeta" i
\zeta
endsnippet

snippet \h "eta" i
\eta
endsnippet

snippet \u "theta" i
\theta
endsnippet

snippet \i "iota" i
\iota
endsnippet

snippet \k "kappa" i
\kappa
endsnippet

snippet \l "lambda" i
\lambda
endsnippet

snippet \m "mu" i
\mu
endsnippet

snippet \n "nu" i
\nu
endsnippet

snippet \j "xi" i
\xi
endsnippet

snippet \p "pi" i
\pi
endsnippet

snippet \r "rho" i
\rho
endsnippet

snippet \s "sigma" i
\sigma
endsnippet

snippet \t "tau" i
\tau
endsnippet

snippet \y "upsilon" i
\upsilon
endsnippet

snippet \f "phi" i
\phi
endsnippet

snippet \x "chi" i
\chi
endsnippet

snippet \c "psi" i
\psi
endsnippet

snippet \v "omega" i
\omega
endsnippet

snippet \dg "digamma" i
\digamma
endsnippet

snippet \ve "varepsilon" i
\varepsilon
endsnippet

snippet \vf "varphi" i
\varphi
endsnippet

snippet \vp "varpi" i
\varpi
endsnippet

snippet \vr "varrho" i
\varrho
endsnippet

snippet \vs "varsigma" i
\varsigma
endsnippet

snippet \vu "vartheta" i
\vartheta
endsnippet

snippet \be "because" i
\begin & 
endsnippet

snippet \th "because" i
\therefore & 
endsnippet

snippet \di "because" i
\displaystyle 
endsnippet

#-----------------------------------------------------------------------
snippet () "left( right)" Ai
(${1:${VISUAL}})
endsnippet


snippet [] "left[ right]" Ai
[${1:${VISUAL}}]
endsnippet

snippet {} "left{ right}" Ai
{${1:${VISUAL}}}
endsnippet

# Not work
#snippet !\"\"! "left" right"" Air
#"${1:${VISUAL}}"
#endsnippet

snippet || "left| right|" Ai
|${1:${VISUAL}}|
endsnippet

snippet (] "left( right]" Ai
(${1:${VISUAL}}]
endsnippet

snippet [) "left[ right)" Ai
[${1:${VISUAL}})
endsnippet

snippet "_($)?" "_left{ right}" Air
_{${1:${VISUAL}}}
endsnippet

snippet "\^($)?" "^left{ right}" Air
^{${1:${VISUAL}}}
endsnippet

#snippet $ "left$ right$" Ai
#$${1:${VISUAL}}$
#endsnippet

#snippet "[^\\]\(" "left( right)" Air
#(${1:${VISUAL}})
#endsnippet


snippet \l( "left\( right\)" Ai
\left( ${1:${VISUAL}} \right)
endsnippet

snippet \l{ "left\{ right\}" Ai
\\{${1:${VISUAL}}\\}
endsnippet

snippet \l[ "left\[ right\]" Ai
\\[ ${1:${VISUAL}} \\]
endsnippet

snippet \l| "left\| right\|" Ai
\left| ${1:${VISUAL}} \right|
endsnippet

snippet \l{ "left\{ right\}" Ai
\left\\{ ${1:${VISUAL}} \right\\}
endsnippet

# Some bug see \textLabel{
#snippet "[^\\_]\{" "left{ right}" Air
#{${1:${VISUAL}}} 
#endsnippet

snippet \[ "left\[ right\]" Ai
\[ ${1:${VISUAL}} \]
endsnippet

#snippet "[^\\][" "left[ right]" w
#\left[ ${1:${VISUAL}} \right]
#endsnippet


snippet l\{ "left {" w
\left\\\{
$1
\right.
endsnippet

snippet lim "Limit" w
\lim_{${1:n\to \infty}}
endsnippet

snippet int "Integral" w
\int_{${1:0}}^{${2:\infty}}
endsnippet

snippet sum "Sum" w
\sum_{${1:n=0}}^{${2:\infty}}
endsnippet

snippet prod "Product" w
\prod_{${1:1}}^{${2:\infty}}
endsnippet

snippet frac "Fraction" w
\frac{${1:${VISUAL:1}}}{${2:n}}
endsnippet

snippet sqrt "Sqrt" w
\sqrt{${1}}
endsnippet

# Not use
snippet par "partial" i
\partial{$1}
endsnippet

#snippet \Lap "Laplacian" i
#\triangle
#endsnippet

#snippet \dA "d'Alembertian" i
#\square
#endsnippet


snippet tbf "Text boldface" w
\textbf{$1}
endsnippet

snippet hat "hat" w
\hat{$1}
endsnippet

snippet bar "bar" w
\bar{$1}
endsnippet

snippet ver "ver" w
\vert $1 \vert
endsnippet

snippet Ver "Ver" w
\Vert $1 \Vert
endsnippet

snippet mbf "Math boldface" w
\mathbf{$1}
endsnippet

snippet mbb "Mathbb" w
\mathbb{$1}
endsnippet

snippet be "because" w
\because & $1 \\\\
endsnippet

snippet th "therefore" w
\therefore & $1 \\\\
endsnippet

snippet bsb "Bold Symbol" w
\boldsymbol{$1}
endsnippet

snippet tit "Text italics" w
\textit{$1}
endsnippet

snippet txt "Text" w
\text{$1}
endsnippet

snippet ol "Overline" w
\overline{$1}
endsnippet


snippet "mat(rix)?" "Smart Matrix" br
\left[
\begin{${1:p/b/v/V/B/small}matrix}
	$2
\end{$1matrix}
\right]
endsnippet


snippet tabular "Tabular / Array" b
\begin{${1:t}${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${2:c}}
$0${2/(?<=.)(c|l|r)|./(?1: & )/g}
\end{$1${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}

endsnippet

snippet table "Table" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
	$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}

endsnippet

snippet fig "Figure" b
\begin{figure}[${2:htpb}]
	\centering
	\includegraphics[width=${3:0.8}\linewidth]{${4:name.ext}}
	\caption{${4/(\w+)\.\w+/\u$1/}$0}
	\label{fig:${4/(\w+)\.\w+/$1/}}
\end{figure}

endsnippet
#-----------------------------------------------------------------------
snippet eq "Equation" w
\begin{equation}
	$1
\end{equation}

endsnippet

snippet eq* "Equation without numbering" w
\begin{equation*}
	$1
\end{equation*}

endsnippet

snippet split "Split" w
\begin{split}
	$1
\end{split}
endsnippet

snippet align "Align" w
\begin{align}
	$1
\end{align}

endsnippet

snippet align* "Align without numbering" w
\begin{align*}
	$1
\end{align*}

endsnippet

snippet cases "Cases" w
\begin{cases}
	$1	\\\\
	$2
\end{cases}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}[(i)]
	\item $1
	\item $2
\end{enumerate}

endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item $1
	\item $2
\end{itemize}

endsnippet


snippet desc "Description" b
\begin{description}
	\item[$1]\hfill \\$2
	\item[$3]\hfill \\$4
\end{description}

endsnippet
#-----------------------------------------------------------------------
snippet begin "begin{} / end{}" b
\begin{${1:name}}
	${2:${VISUAL}}
\end{$1}
endsnippet


snippet >begin "begin{} / end{}" b
> \begin{${1:name}}
>	${2:${VISUAL}}
> \end{$1}

endsnippet

snippet array "Array" b
\begin{array}{$1}
	$2
\end{array}
endsnippet

snippet proof "Proof" b
\begin{proof}
	$1
\end{proof}
endsnippet

snippet cor "Corollary" b
\begin{corollary}
	$1
\end{corollary}
endsnippet

snippet lmm "Lemma" b
\begin{lemma}
	$1
\end{lemma}
endsnippet

snippet prop "Proposition" b
\begin{proposition}
	$1
\end{proposition}
endsnippet


snippet def "Definition" b
\begin{definition}
	$1
\end{definition}

endsnippet

snippet remark "Remark" b
\begin{remark}
	$1
\end{remark}
endsnippet

snippet example "Example" b
\begin{example}
	$1
\end{example}
endsnippet

snippet exercise "Exercise" b
\begin{exercise}
	$1
\end{exercise}

endsnippet

snippet solution "Solution" b
\begin{solution}
	$1
\end{solution}

endsnippet

snippet question "Question" b
\begin{question}
	$1
\end{question}

endsnippet

snippet problem "Problem" b
\begin{problem}
	$1
\end{problem}

endsnippet

snippet update "Update" b
\begin{update}
	$1
\end{update}

endsnippet

snippet abstract "Abstract" b
\begin{abstract}
	$1
\end{abstract}

endsnippet
#-----------------------------------------------------------------------
snippet \now "Today"
`date +"%Y-%m-%d %T"`
endsnippet
#-----------------------------------------------------------------------
# For temporary use, these should be customed to personal preference
# vim:ft=snippets:
snippet ml "Math Function" w
\$$1\$ $0
endsnippet

snippet mll "Math Function" w
\$\$$1\$\$ $0
endsnippet
